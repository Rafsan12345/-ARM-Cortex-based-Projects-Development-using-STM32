#include "stm32f103x6.h"

void UART1_Init(void)
{
    RCC->APB2ENR |= RCC_APB2ENR_USART1EN | RCC_APB2ENR_IOPAEN;

    GPIOA->CRH &= ~(GPIO_CRH_MODE9 | GPIO_CRH_CNF9);
    GPIOA->CRH |= GPIO_CRH_MODE9_1 | GPIO_CRH_CNF9_1; // TX AF PP
    GPIOA->CRH &= ~(GPIO_CRH_MODE10 | GPIO_CRH_CNF10);
    GPIOA->CRH |= GPIO_CRH_CNF10_0; // RX input floating

    USART1->BRR = 72000000/9600;
    USART1->CR1 = USART_CR1_TE | USART_CR1_RE | USART_CR1_UE;
}

// Polling transmit (blocking)
void UART1_SendChar(char c)
{
    while(!(USART1->SR & USART_SR_TXE)); // Wait until TX buffer empty
    USART1->DR = c;
}

// Polling receive (blocking)
char UART1_ReceiveChar(void)
{
    while(!(USART1->SR & USART_SR_RXNE)); // Wait until RX not empty
    return USART1->DR;
}

int main(void)
{
    UART1_Init();
    while(1)
    {
        char c = UART1_ReceiveChar(); // Blocking
        UART1_SendChar(c);            // Blocking
    }
}
